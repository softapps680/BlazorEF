@page "/editproduct/{Id}"

<h3>Redigera produkt</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@productModel" OnValidSubmit="@HandleValidSubmitAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText type="hidden" id="Id" @bind-Value=Id />
            <div class="form-group">
                <label for="Name" class="form-label">Name</label>
                <InputText class="form-control" id="name" @bind-Value="productModel.Name" />
            </div>
            <div class="form-group">
                <label for="Description" class="form-label">Description</label>
                <InputText class="form-control" id="description" @bind-Value="productModel.Description" />
            </div>
            <div class="form-group">
                <label for="ImageUrl" class="form-label">Image-url</label>
                <InputText class="form-control" id="imageurl" @bind-Value="productModel.ImageUrl" />
            </div>
          



            <button class="btn btn-dark btn-sm"type="submit">Save</button>
        </EditForm>
    </div>
</div>



@code {

    [Parameter]
    public string Id { get; set; }

    private List<Category> categories;
    private Product productModel = new();



    protected override async Task OnInitializedAsync()
    {
        categories = await Http.GetFromJsonAsync<List<Category>>("api/products/getcategories");
        productModel = await Http.GetFromJsonAsync<Product>("api/products/edit/"+Id);
        categories = new();

    }
    private async Task HandleValidSubmitAsync()
    {
        await Http.PostAsJsonAsync("api/products/editproduct/"+Id, productModel);

    }

    }